version: 2.1

commands:
  after_failure:
    description: "Steps to be run after build or test failure"
    parameters:
      when:
        type: string
    steps:
      - run:
          name: On failure action
          command: |
            env | sort > artifacts/env.out
            cp -a $HOME/.bashrc artifacts || true
            cp -a $HOME/.profile artifacts || true
            cp -a $HOME/.bash_profile artifacts ||
            cp -a $HOME/.nuocmdrc artifacts || true
            cp -a /etc/nuodb/nuoadmin.conf artifacts || true
            cp -a /var/log/nuodb/nuoadmin.log* artifacts || true
          when: <<parameters.when>>

      - when:
          condition: <<parameters.when>>
          steps:
            - store_artifacts:
                path: artifacts

jobs:
  build_n_run:
    description: "Build the nuodb-python module and run the test suite"
    docker:
      - image: nuodb/nuodb:latest
        user: root
    resource_class: small
    environment:
      TZ : America/New_York
      NUO_SET_TLS : disable
      NUOCMD_CLIENT_KEY : ""
      NUOCMD_VERIFY_SERVER : ""
      NUOCMD_PLUGINS : ""
    steps:
      - checkout
      - run:
          name: Make test directories
          command: mkdir -p artifacts results
      - run:
          name: Install make
          command: dnf install make -y
      - run:
          name: Install Python dependencies
          command: make install
      - run:
          name: Start NuoDB Admin
          command: |
            sudo -u nuodb /opt/nuodb/etc/nuoadmin tls $NUO_SET_TLS
            sudo -u nuodb /opt/nuodb/etc/nuoadmin tls status
            sudo -u nuodb /opt/nuodb/etc/nuoadmin start
            sudo -u nuodb /opt/nuodb/bin/nuocmd --show-json get effective-license
      - run:
          name: Run test
          command: make fulltest
      - store_artifacts:
          path: artifacts
      - store_test_results:
          path: results
      - after_failure:
          when : "on_fail"

workflows:
  build-project:
    jobs:
      - build_n_run:
          name: "Build and run regression tests"
          context:
            - common-config
